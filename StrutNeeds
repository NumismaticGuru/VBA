Sub findStrut()
Dim lw As Long

Dim StartTime As Double
Dim SecondsElapsed As Double

  StartTime = Timer
    Range("A1:AS6").UnMerge
    'clean the junk
    delete_totals
    delete_bolds
    delete_columns
    
    Range("K8").Value = "Needed"
    Range("K8").Font.Bold = True
   
    lw = Range("A" & Rows.Count).End(xlUp).Row
    
    'Do math for needed column
    For x = 9 To lw
        On Error Resume Next
        Cells(x, 11) = "=RC[-6]-(RC[-5]+RC[-4]-RC[-3])"
    Next x
    
    'filter >0
    autofilters
    'filter to haydon and flex
    'no easy way to filter on multiple conditions
    filterStrut
    
    [L8] = "Rounded"
    Range("L8").Font.Bold = True
    rounding
    
    
    
    lw = Range("A" & Rows.Count).End(xlUp).Row
    Application.DisplayAlerts = False
    Range("A1").Value = "PUPCO South Strut Needs"
    Range("A2:A3").Clear
    Range("A1:L6").Merge
    Range("A1:L6").VerticalAlignment = xlCenter
    Range("A9").Select
    Application.DisplayAlerts = True
    Range("B1:C20").AutoFit
    Range("A7:L8").Interior.ColorIndex = 15
    Range("A1:C30").Columns.AutoFit
    
    SecondsElapsed = Round(Timer - StartTime, 2)

    MsgBox "This code ran successfully in " & SecondsElapsed & " seconds", vbInformation
End Sub
Private Sub delete_totals()
lastrow = Cells(Rows.Count, 1).End(xlUp).Row

For x = 10 To lastrow
On Error Resume Next
    If Cells(x, 6) <> "" Then
        Rows(x).EntireRow.Delete
        x = x - 1
    End If
Next x
End Sub
Private Sub delete_bolds()
x = 10
Do While Cells(x, 1) <> ""
    If Cells(x, 42) = "" Then
        Rows(x).EntireRow.Delete
        x = x - 1
    End If
x = x + 1
Loop
End Sub
Private Sub delete_columns()
For x = 1 To 28
    Columns(4).EntireColumn.Delete
Next x
For x = 1 To 7
    Columns(11).EntireColumn.Delete
Next x
End Sub
Private Sub delete_NotAvailable()
'This code takes too long to run
x = 9
Do While Cells(x, 1) <> ""
On Error Resume Next
    If Cells(x, 11) < 1 And Cells(x, 19) < 1 Then
        Rows(x).EntireRow.Delete
        x = x - 1
    End If
x = x + 1
Loop
End Sub
Private Sub CalculateRunTime_Seconds()
Dim StartTime As Double
Dim SecondsElapsed As Double

  StartTime = Timer

  SecondsElapsed = Round(Timer - StartTime, 2)

  MsgBox "This code ran successfully in " & SecondsElapsed & " seconds", vbInformation
End Sub
Private Sub autofilters()
'filter and delete less than 1 available
With ActiveSheet.Range("A8:L8")
.AutoFilter field:=11, Criteria1:="<=0.00"
End With

Z = Cells(Rows.Count, 1).End(xlUp).Row

Range("A9:S" & Z).Select

Selection.EntireRow.Delete
ActiveSheet.ShowAllData
End Sub
Private Sub filterStrut()
'filter out non flex and haydon

With ActiveSheet.Range("A8:L8")
.AutoFilter field:=3, Criteria1:="<>V001710*", _
Operator:=xlAnd, Criteria2:="<>V001855*"
End With

Z = Cells(Rows.Count, 1).End(xlUp).Row

Range("A9:S" & Z).Select

Selection.EntireRow.Delete
ActiveSheet.ShowAllData
End Sub
Private Sub rounding()
'round up to the nearest 500
Z = Cells(Rows.Count, 1).End(xlUp).Row

For x = 9 To Z
    y = Cells(x, 11)
    yy = Application.WorksheetFunction.RoundUp(y / 500, 0) * 500
    Cells(x, 12) = yy
Next x
End Sub

